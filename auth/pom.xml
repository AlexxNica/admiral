<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017 VMware, Inc. All Rights Reserved.
  ~
  ~ This product is licensed to you under the Apache License, Version 2.0 (the "License").
  ~ You may not use this product except in compliance with the License.
  ~
  ~ This product may include a number of subcomponents with separate copyright notices
  ~ and license terms. Your use of these subcomponents is subject to the terms and
  ~ conditions of the subcomponent's license, as noted in the LICENSE file.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.vmware.admiral</groupId>
        <artifactId>admiral</artifactId>
        <version>0.9.5-SNAPSHOT</version>
    </parent>

    <artifactId>admiral-auth</artifactId>
    <packaging>jar</packaging>

    <repositories>
        <repository>
            <id>lightwave</id>
            <url>http://dl.bintray.com/vmware/lightwave-maven</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <lightwave.version>6.6.0</lightwave.version>
        <powermock.version>1.6.6</powermock.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>admiral-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${xenon.group}</groupId>
            <artifactId>xenon-common</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>admiral-compute</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.photon.controller</groupId>
            <artifactId>photon-model</artifactId>
        </dependency>

        <!-- Lightwave -->
        <dependency>
            <groupId>com.vmware.identity.rest.idm</groupId>
            <artifactId>vmware-identity-rest-idm-client</artifactId>
            <version>${lightwave.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.identity.rest.afd</groupId>
            <artifactId>vmware-identity-rest-afd-client</artifactId>
            <version>${lightwave.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.identity</groupId>
            <artifactId>authentication-framework</artifactId>
            <version>${lightwave.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmware.identity</groupId>
            <artifactId>openidconnect-client-lib</artifactId>
            <version>${lightwave.version}</version>
        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>admiral-common-test</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>${jacoco.version}</version>
            <classifier>runtime</classifier>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>lightwave</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>2.4.3</version>
                        <executions>
                            <execution>
                                <id>lightwave-uber-jar</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <finalName>${project.artifactId}-${project.version}-lightwave</finalName>
                                    <filters>
                                        <filter>
                                            <artifact>*:*</artifact>
                                            <excludes>
                                                <exclude>META-INF/*.SF</exclude>
                                                <exclude>META-INF/*.DSA</exclude>
                                                <exclude>META-INF/*.RSA</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                    <transformers>
                                        <transformer
                                            implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>com.vmware.admiral.auth.lightwave.util.RegisterWithLightwave</mainClass>
                                        </transformer>
                                    </transformers>
                                    <shadedArtifactAttached>true</shadedArtifactAttached>
                                    <shadedClassifierName>lightwave-uber-jar</shadedClassifierName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- JaCoCo Offline Instrumentation with PowerMock: https://github.com/powermock/powermock/wiki/Code-coverage-with-JaCoCo -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>default-instrument</id>
                        <goals>
                            <goal>instrument</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-restore-instrumented-classes</id>
                        <goals>
                            <goal>restore-instrumented-classes</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.plugin.surefire}</version>
                <configuration>
                    <useUnlimitedThreads>true</useUnlimitedThreads>
                    <systemPropertyVariables>
                        <jacoco-agent.destfile>${project.build.directory}/coverage.exec</jacoco-agent.destfile>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
